//
//  ViewController.swift
//  Test
//
//  Created by Ricky Erdiansyah on 05/04/19.
//  Copyright Â© 2019 Ricky Erdiansyah. All rights reserved.
//

import UIKit
var emailTemp=""
class ViewController: UIViewController, UITextFieldDelegate {
    /*let = constant
      var = variable*/
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        
        //Handle the text field's user input through delegate callbacks.
        nameField.delegate = self
        emailField.delegate = self
        passField.delegate = self
        confirmPassField.delegate = self
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
       /*  When the user taps a text field, it automatically becomes the first responder. In an app, the first responder is an object that is first on the line for receiving many kinds of app events, including key events, motion events, and action messages, among others. In other words, many of the events generated by the user are initially routed to the first responder. */
        
        // Hide the keyboard
        textField.resignFirstResponder()
        return true
        /*  return true -> This method returns a Boolean value that indicates whether the system should process the press of the Return key. In this case, you always want to respond to the user pressing the Return key, so just return true.*/
    }
    
    func textFieldDidEndEditing(_ textField: UITextField) {
        nameField.text = textField.text
        emailField.text = textField.text
        passField.text = textField.text
        confirmPassField.text = textField.text
    }
    
    func emailValidation(testStr: String) -> Bool {
        let emailRegEx = "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
        
        let emailTest = NSPredicate(format:"SELF MATCHES %@", emailRegEx)
        return emailTest.evaluate(with: testStr)
        
       /* let emailTest = NSPredicate(format:"SELF MATCHES[c] %@", emailRegEx)
        return emailTest.evaluate(with: emailField)*/
    }
    
    func validate(){
        
        errorLbl.text=""
        if nameField.text==""{
            errorLbl.text="Name must be filled"
            nameErrorLbl.isHidden = false
        }else if emailField.text==""{
            errorLbl.text="Email must be filled"
            nameErrorLbl.isHidden = true
            emailErrorLbl.isHidden = false
        }else if passField.text==""{
            errorLbl.text="Password must be filled"
            emailErrorLbl.isHidden = true
            passErrorLbl.isHidden = false
        }else if passField.text != confirmPassField.text{
            errorLbl.text="Wrong Password"
            passErrorLbl.isHidden = true
            confirmPassField.isHidden = false
        }
        errorLbl.text=""
        
    }
    
    @IBOutlet weak var errorLbl: UILabel!
    @IBOutlet weak var nameErrorLbl: UILabel!
    @IBOutlet weak var emailErrorLbl: UILabel!
    @IBOutlet weak var passErrorLbl: UILabel!
    @IBOutlet weak var confirmErrorLbl: UILabel!
    
    @IBOutlet weak var nameField: UITextField!
    @IBOutlet weak var emailField: UITextField!
    @IBOutlet weak var passField: UITextField!
    @IBOutlet weak var confirmPassField: UITextField!
    
    @IBAction func submitBtn(_ sender: UIButton) {
      validate()
    }
    @IBAction func clickMe(_ sender: UIButton) {
        view.self.backgroundColor = UIColor.white
        if view.self.backgroundColor == UIColor.white
    }
}
